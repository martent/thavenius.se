# Use nginx_conf_default to take care of :80

## Let's encrypt cert
# # If needed, generate snakeoil certs first
# sudo openssl req \
#        -newkey rsa:2048 -nodes -keyout /etc/ssl/private/ssl-cert-snakeoil.key \
#        -x509 -days 365 -out /etc/ssl/certs/ssl-cert-snakeoil.crt
#
# sudo certbot --nginx
# sudo certbot renew

server {
  server_name thavenius.se www.thavenius.se thavenius.com www.thavenius.com;
  listen 80;
  listen [::]:80;

  if ($scheme != "https") {
    return 301 https://thavenius.se$request_uri;
  }

  if ($http_host ~* "^(www|thavenius.com)") {
    return 301 https://thavenius.se$request_uri;
  }
}

server {
  server_name thavenius.se www.thavenius.se thavenius.com www.thavenius.com;
  listen 443 ssl http2;
  gzip on;
  gzip_vary on;

  if ($http_host ~* "^(www|thavenius.com)") {
    return 301 https://thavenius.se$request_uri;
  }

  root /home/app_runner/webapps/thavenius.se;

  # ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.crt;
  # ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
  ssl_certificate /etc/letsencrypt/live/grandgrid.se/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/grandgrid.se/privkey.pem; # managed by Certbot
  ssl_dhparam /etc/nginx/certs/dhparam.pem;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # TLSv1.3;

  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/nginx/certs/lets-encrypt-x3-cross-signed.pem;

  expires 24h;
  etag off;

  add_header X-UA-Compatible "IE=Edge";

  error_page 404 = @not_found;
  location @not_found {
    return 301 /;
  }

  log_not_found off;
  access_log /var/log/nginx/thavenius_access.log;
  error_log /var/log/nginx/thavenius_error.log;
}
